{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\src\\\\manageNodes.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    getAmNodes {\\n      nodeId\\n      nodeName\\n      pathNameString\\n      pathString\\n      pathLength\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    getFkNodes {\\n      nodeId\\n      nodeName\\n      pathNameString\\n      pathString\\n      pathLength\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { compose, graphql } from \"react-apollo\";\nconst GetFkNodes = gql(_templateObject());\nconst GetAmNodes = gql(_templateObject2());\n\nclass ManageNodes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showFlipkartNodes: true,\n      showAmazonNodes: false\n    };\n\n    this.switchRetailerView = () => {\n      this.setState({\n        showFlipkartNodes: !this.state.showFlipkartNodes,\n        showAmazonNodes: !this.state.showAmazonNodes\n      }, function () {\n        if (this.state.showFlipkartNodes) {\n          document.getElementById(\"flipkart-outer-div\").style.display = \"block\";\n        } else {\n          document.getElementById(\"flipkart-outer-div\").style.display = \"none\";\n        }\n\n        if (this.state.showAmazonNodes) {\n          document.getElementById(\"amazon-outer-div\").style.display = \"block\";\n        } else {\n          document.getElementById(\"amazon-outer-div\").style.display = \"none\";\n        }\n      });\n    };\n  }\n\n  render() {\n    console.log(this.props);\n    const loadingFk = this.props.getFkNodes.loading;\n    const getFkNodes = this.props.getFkNodes.getFkNodes;\n    const loadingAm = this.props.getAmNodes.loading;\n    const getAmNodes = this.props.getAmNodes.getAmNodes;\n\n    if (loadingFk || loadingAm) {\n      return false;\n    } else {\n      this.setupFkNodes();\n      this.setupAmNodes();\n    }\n\n    return React.createElement(\"div\", {\n      className: \"custom-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-with-underline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Manage Categories\")), React.createElement(\"div\", {\n      className: \"mc-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"retailer-outer-div\",\n      className: \"mc-row-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Retailer Categories\"), React.createElement(\"div\", {\n      className: \"custom-box-controller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.showFlipkartNodes ? \"controller selected-controller\" : \"controller\",\n      onClick: this.switchRetailerView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Flipkart\"), React.createElement(\"div\", {\n      className: this.state.showAmazonNodes ? \"controller selected-controller\" : \"controller\",\n      onClick: this.switchRetailerView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"Amazon\")), React.createElement(\"div\", {\n      id: \"flipkart-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Flipkart Nodes\"), React.createElement(\"div\", {\n      id: \"amazon-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Amazon Nodes\")), React.createElement(\"div\", {\n      id: \"huddlie-outer-div\",\n      className: \"mc-row-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-no-border\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Huddlie Categories\"))))));\n  }\n\n}\n\nexport default compose(graphql(GetFkNodes, {\n  name: \"getFkNodes\"\n}), graphql(GetAmNodes, {\n  name: \"getAmNodes\"\n}))(ManageNodes);","map":{"version":3,"sources":["C:\\Apps\\Categories\\huddlie_nodes\\client\\src\\manageNodes.jsx"],"names":["React","Component","gql","compose","graphql","GetFkNodes","GetAmNodes","ManageNodes","state","showFlipkartNodes","showAmazonNodes","switchRetailerView","setState","document","getElementById","style","display","render","console","log","props","loadingFk","getFkNodes","loading","loadingAm","getAmNodes","setupFkNodes","setupAmNodes","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { compose, graphql } from \"react-apollo\";\r\n\r\nconst GetFkNodes = gql`\r\n  query {\r\n    getFkNodes {\r\n      nodeId\r\n      nodeName\r\n      pathNameString\r\n      pathString\r\n      pathLength\r\n    }\r\n  }\r\n`;\r\n\r\nconst GetAmNodes = gql`\r\n  query {\r\n    getAmNodes {\r\n      nodeId\r\n      nodeName\r\n      pathNameString\r\n      pathString\r\n      pathLength\r\n    }\r\n  }\r\n`;\r\n\r\nclass ManageNodes extends Component {\r\n  state = {\r\n    showFlipkartNodes: true,\r\n    showAmazonNodes: false\r\n  };\r\n\r\n  switchRetailerView = () => {\r\n    this.setState(\r\n      {\r\n        showFlipkartNodes: !this.state.showFlipkartNodes,\r\n        showAmazonNodes: !this.state.showAmazonNodes\r\n      },\r\n      function() {\r\n        if (this.state.showFlipkartNodes) {\r\n          document.getElementById(\"flipkart-outer-div\").style.display = \"block\";\r\n        } else {\r\n          document.getElementById(\"flipkart-outer-div\").style.display = \"none\";\r\n        }\r\n        if (this.state.showAmazonNodes) {\r\n          document.getElementById(\"amazon-outer-div\").style.display = \"block\";\r\n        } else {\r\n          document.getElementById(\"amazon-outer-div\").style.display = \"none\";\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n\r\n    const loadingFk = this.props.getFkNodes.loading;\r\n    const getFkNodes = this.props.getFkNodes.getFkNodes;\r\n    const loadingAm = this.props.getAmNodes.loading;\r\n    const getAmNodes = this.props.getAmNodes.getAmNodes;\r\n\r\n    if (loadingFk || loadingAm) {\r\n      return false;\r\n    } else {\r\n      this.setupFkNodes();\r\n      this.setupAmNodes();\r\n    }\r\n\r\n    return (\r\n      <div className=\"custom-outer-div\">\r\n        <div className=\"custom-box-container\">\r\n          <div className=\"inner-container\">\r\n            {/* <div className=\"header\">Manage Huddlie Categories</div> */}\r\n            <div className=\"header-no-border\">\r\n              <label className=\"label-with-underline\">Manage Categories</label>\r\n            </div>\r\n            <div className=\"mc-row\">\r\n              <div id=\"retailer-outer-div\" className=\"mc-row-50\">\r\n                <div className=\"header-no-border\">Retailer Categories</div>\r\n                <div className=\"custom-box-controller\">\r\n                  <div\r\n                    className={\r\n                      this.state.showFlipkartNodes\r\n                        ? \"controller selected-controller\"\r\n                        : \"controller\"\r\n                    }\r\n                    onClick={this.switchRetailerView}\r\n                  >\r\n                    Flipkart\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.showAmazonNodes\r\n                        ? \"controller selected-controller\"\r\n                        : \"controller\"\r\n                    }\r\n                    onClick={this.switchRetailerView}\r\n                  >\r\n                    Amazon\r\n                  </div>\r\n                </div>\r\n                <div id=\"flipkart-outer-div\">Flipkart Nodes</div>\r\n                <div id=\"amazon-outer-div\">Amazon Nodes</div>\r\n              </div>\r\n              <div id=\"huddlie-outer-div\" className=\"mc-row-50\">\r\n                <div className=\"header-no-border\">Huddlie Categories</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(GetFkNodes, { name: \"getFkNodes\" }),\r\n  graphql(GetAmNodes, { name: \"getAmNodes\" })\r\n)(ManageNodes);\r\n"]},"metadata":{},"sourceType":"module"}