{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\src\\\\manageNodes.jsx\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  background: \", \";\\n  color: \", \";\\n  font-family: Ozxgen, sans-serif;\\n  margin: 0px 0px 5px 0px !important;\\n  box-shadow: \", \";\\n  border-radius: \", \";\\n  vertical-align: middle;\\n  display: flex;\\n  flex-direction: row;\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: column;\\n  padding 5px 75px;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation removeLink($nodeId: String!, $nodeToDelete: linkedNodeInput!) {\\n    removeLink(nodeId: $nodeId, nodeToDelete: $nodeToDelete) {\\n      flipkartNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n      amazonNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n      huddlieNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation linkNodes($nodeId: String!, $nodeList: [linkedNodeInput]!) {\\n    linkNodes(nodeId: $nodeId, nodeList: $nodeList) {\\n      flipkartNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n      amazonNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n      huddlieNodes {\\n        nodeId\\n        nodeName\\n        pathString\\n        pathNameString\\n        pathLength\\n        linkedNodes {\\n          retailer\\n          nodeId\\n          nodePath\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  mutation getNodesAsObj($retailer: String!) {\\n    getNodesAsObj(retailer: $retailer) {\\n      nodes\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { compose, graphql } from \"react-apollo\";\nimport values from \"lodash/values\";\nimport TreeNode from \"./treeNode\";\nimport { FaToggleOn, FaToggleOff, FaTimes } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nconst GetNodesAsObj = gql(_templateObject());\nconst LinkNodes = gql(_templateObject2());\nconst RemoveLink = gql(_templateObject3());\n\nconst getBackgroundColor = retailer => {\n  var color = \"#e0ffff\"; //light cyan\n\n  if (retailer === \"header\") {\n    color = \"#eee\";\n  } else if (retailer === \"hd\") {\n    color = \"#e0ffff\";\n  } else if (retailer === \"fk\") {\n    color = \"#F8E831\";\n  } else if (retailer === \"am\") {\n    color = \"#146EB4\";\n  }\n\n  return color;\n};\n\nconst getColor = retailer => {\n  var color = \"#000\"; //light cyan\n\n  if (retailer === \"fk\") {\n    color = \"#047BD5\";\n  } else if (retailer === \"am\") {\n    color = \"#FF9900\";\n  }\n\n  return color;\n};\n\nconst AddedNodeOuter = styled.div(_templateObject4());\nconst AddedNodeInner = styled.div(_templateObject5(), props => getBackgroundColor(props.retailer), props => getColor(props.retailer), props => props.retailer === \"header\" ? \"0px\" : \"0px 0px 5px 0px rgba(15, 15, 15, 0.2)\", props => props.retailer === \"header\" ? \"0px\" : \"10px\");\n\nclass ManageNodes extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showFlipkartNodes: true,\n      showAmazonNodes: false,\n      toggleOnHover: false,\n      fkNodes: {},\n      amNodes: {},\n      hdNodes: {},\n      fkSelected: \"\",\n      amSelected: \"\",\n      hdSelected: \"\",\n      linkNodesNode: {\n        nodeId: \"\",\n        nodePath: \"\"\n      },\n      linkNodesNodeList: []\n    };\n\n    this.getRootNodes = retailer => {\n      var nodes = {};\n\n      switch (retailer) {\n        case \"hd\":\n          nodes = this.state.hdNodes;\n          break;\n\n        case \"fk\":\n          nodes = this.state.fkNodes;\n          break;\n\n        case \"am\":\n          nodes = this.state.amNodes;\n          break;\n\n        default:\n          break;\n      }\n\n      return values(nodes).filter(node => node.pathLength === 0);\n    };\n\n    this.getChildNodes = (retailer, node) => {\n      var nodes = {};\n\n      switch (retailer) {\n        case \"hd\":\n          nodes = this.state.hdNodes;\n          break;\n\n        case \"fk\":\n          nodes = this.state.fkNodes;\n          break;\n\n        case \"am\":\n          nodes = this.state.amNodes;\n          break;\n\n        default:\n          break;\n      }\n\n      var result = values(nodes).filter(node2 => node2.pathNameString === node.tempPath); // console.log(result);\n\n      return result;\n    };\n\n    this.onHover = (retailer, node) => {\n      if (this.state.toggleOnHover && !node.isOpen) {\n        this.onToggle(retailer, node);\n      }\n    };\n\n    this.onToggle = (retailer, node) => {\n      const tempName = retailer + \"Nodes\";\n      var nodes = {};\n\n      switch (retailer) {\n        case \"hd\":\n          nodes = this.state.hdNodes;\n          break;\n\n        case \"fk\":\n          nodes = this.state.fkNodes;\n          break;\n\n        case \"am\":\n          nodes = this.state.amNodes;\n          break;\n\n        default:\n          break;\n      }\n\n      nodes[node.tempPath].isOpen = !node.isOpen;\n      this.setState({\n        [tempName]: nodes\n      });\n    };\n\n    this.onSelectNode = (retailer, node) => {\n      const tempNodesName = retailer + \"Nodes\";\n      const tempSelectedName = retailer + \"Selected\";\n      var nodes = {};\n      var currentlySelected = \"\";\n\n      switch (retailer) {\n        case \"hd\":\n          nodes = this.state.hdNodes;\n          currentlySelected = this.state.hdSelected;\n          break;\n\n        case \"fk\":\n          nodes = this.state.fkNodes;\n          currentlySelected = this.state.fkSelected;\n          break;\n\n        case \"am\":\n          nodes = this.state.amNodes;\n          currentlySelected = this.state.amSelected;\n          break;\n\n        default:\n          break;\n      }\n\n      if (currentlySelected !== \"\" && currentlySelected !== node.tempPath) {\n        nodes[currentlySelected].isSelected = node.isSelected;\n      }\n\n      nodes[node.tempPath].isSelected = !node.isSelected;\n      this.setState({\n        [tempNodesName]: nodes,\n        [tempSelectedName]: node.tempPath\n      });\n    };\n\n    this.onAddNode = (retailer, node) => {\n      var tempNodePath = \"\";\n\n      if (retailer === \"hd\") {\n        if (node.pathLength > 0) {\n          tempNodePath = node.pathNameString + \">\" + node.nodeName;\n        } else {\n          tempNodePath = node.nodeName;\n        }\n\n        if (this.state.linkNodesNode.nodeId === \"\") {\n          this.setState({\n            linkNodesNode: {\n              nodeId: node.nodeId,\n              nodePath: tempNodePath\n            }\n          });\n        } else if (this.state.linkNodesNode.nodeId !== node.nodeId) {\n          this.setState({\n            linkNodesNode: {\n              nodeId: node.nodeId,\n              nodePath: tempNodePath\n            },\n            linkNodesNodeList: []\n          });\n        }\n      } else {\n        var list = this.state.linkNodesNodeList;\n        tempNodePath = \"\";\n\n        if (node.pathLength > 0) {\n          tempNodePath = node.pathNameString + \">\" + node.nodeName;\n        } else {\n          tempNodePath = node.nodeName;\n        }\n\n        var toBeAdded = true;\n\n        for (var x = 0; x < list.length; x++) {\n          var tempNode = list[x];\n\n          if (tempNode.retailer === retailer && tempNode.nodeId === node.nodeId && tempNode.nodePath === tempNodePath) {\n            toBeAdded = false;\n          }\n        }\n\n        if (toBeAdded) {\n          list.push({\n            retailer: retailer,\n            nodeId: node.nodeId,\n            nodePath: tempNodePath\n          });\n        }\n\n        this.setState({\n          linkNodesNodeList: list\n        });\n      }\n    };\n\n    this.showRemoveButton = elId => {\n      console.log(elId);\n      var el = document.getElementById(elId);\n\n      if (el.style.display === \"\" || el.style.display === \"none\") {\n        var x = document.getElementsByClassName(\"linkedNodeRemoveBtn\");\n        var i;\n\n        for (i = 0; i < x.length; i++) {\n          x[i].style.display = \"none\";\n        }\n\n        el.style.display = \"block\";\n      } else {\n        el.style.display = \"none\";\n      }\n    };\n\n    this.switchRetailerView = () => {\n      this.setState({\n        showFlipkartNodes: !this.state.showFlipkartNodes,\n        showAmazonNodes: !this.state.showAmazonNodes\n      }, function () {\n        if (this.state.showFlipkartNodes) {\n          document.getElementById(\"flipkart-outer-div\").style.display = \"block\";\n        } else {\n          document.getElementById(\"flipkart-outer-div\").style.display = \"none\";\n        }\n\n        if (this.state.showAmazonNodes) {\n          document.getElementById(\"amazon-outer-div\").style.display = \"block\";\n        } else {\n          document.getElementById(\"amazon-outer-div\").style.display = \"none\";\n        }\n      });\n    };\n\n    this.removeLink = async (node, linkedNode) => {\n      console.log(node);\n      console.log(linkedNode);\n      var result = await this.props.RemoveLink({\n        variables: {\n          nodeId: node.nodeId,\n          nodeToDelete: linkedNode\n        }\n      });\n      console.log(result);\n\n      if (result && result.data && result.data.removeLink) {\n        var tempKey = \"\";\n        var node = {};\n        var nodes = {};\n\n        if (result.data.removeLink.amazonNodes && result.data.removeLink.amazonNodes.length > 0) {\n          node = result.data.removeLink.amazonNodes[0];\n\n          if (node.pathLength > 0) {\n            tempKey = node.pathNameString + \">\" + node.nodeName;\n          } else {\n            tempKey = node.nodeName;\n          }\n\n          nodes = this.state.amNodes;\n          nodes[tempKey].linkedNodes = node.linkedNodes;\n          await this.setState({\n            amNodes: nodes\n          });\n        }\n\n        if (result.data.removeLink.flipkartNodes && result.data.removeLink.flipkartNodes.length > 0) {\n          node = result.data.removeLink.flipkartNodes[0];\n\n          if (node.pathLength > 0) {\n            tempKey = node.pathNameString + \">\" + node.nodeName;\n          } else {\n            tempKey = node.nodeName;\n          }\n\n          nodes = this.state.fkNodes;\n          nodes[tempKey].linkedNodes = node.linkedNodes;\n          await this.setState({\n            fkNodes: nodes\n          });\n        }\n\n        if (result.data.removeLink.huddlieNodes && result.data.removeLink.huddlieNodes.length > 0) {\n          node = result.data.removeLink.huddlieNodes[0];\n\n          if (node.pathLength > 0) {\n            tempKey = node.pathNameString + \">\" + node.nodeName;\n          } else {\n            tempKey = node.nodeName;\n          }\n\n          nodes = this.state.hdNodes;\n          nodes[tempKey].linkedNodes = node.linkedNodes;\n          await this.setState({\n            hdNodes: nodes\n          });\n        }\n      }\n    };\n\n    this.linkNodes = async () => {\n      var nodeId = this.state.linkNodesNode.nodeId;\n      var nodeList = this.state.linkNodesNodeList;\n      var result = await this.props.LinkNodes({\n        variables: {\n          nodeId: nodeId,\n          nodeList: nodeList\n        }\n      });\n      console.log(result);\n      var fkNodes = [];\n      var amNodes = [];\n\n      if (result && result.data && result.data.linkNodes) {\n        var tempKey = \"\";\n        var node = {};\n        var nodes = {};\n\n        if (result.data.linkNodes.amazonNodes) {\n          amNodes = result.data.linkNodes.amazonNodes;\n          nodes = this.state.amNodes;\n\n          for (var x = 0; x < amNodes.length; x++) {\n            node = amNodes[x];\n\n            if (node.pathLength > 0) {\n              tempKey = node.pathNameString + \">\" + node.nodeName;\n            } else {\n              tempKey = node.nodeName;\n            }\n\n            nodes[tempKey].linkedNodes = node.linkedNodes;\n            await this.setState({\n              amNodes: nodes\n            });\n          }\n        }\n\n        if (result.data.linkNodes.flipkartNodes) {\n          fkNodes = result.data.linkNodes.flipkartNodes;\n          nodes = this.state.fkNodes;\n\n          for (var y = 0; y < fkNodes.length; y++) {\n            node = fkNodes[y];\n\n            if (node.pathLength > 0) {\n              tempKey = node.pathNameString + \">\" + node.nodeName;\n            } else {\n              tempKey = node.nodeName;\n            }\n\n            nodes[tempKey].linkedNodes = node.linkedNodes;\n            await this.setState({\n              fkNodes: nodes\n            });\n          }\n        }\n\n        if (result.data.linkNodes.huddlieNodes) {\n          node = result.data.linkNodes.huddlieNodes[0];\n\n          if (node.pathLength > 0) {\n            tempKey = node.pathNameString + \">\" + node.nodeName;\n          } else {\n            tempKey = node.nodeName;\n          }\n\n          nodes = this.state.hdNodes;\n          nodes[tempKey].linkedNodes = node.linkedNodes;\n          await this.setState({\n            hdNodes: nodes\n          });\n          this.setState({\n            linkNodesNode: {\n              nodeId: \"\",\n              nodePath: \"\"\n            },\n            linkNodesNodeList: []\n          });\n        }\n      }\n    };\n\n    this.setupNodesAsObj = async retailer => {\n      var nodesObj = await this.props.GetNodesAsObj({\n        variables: {\n          retailer: retailer\n        }\n      });\n      var nodes = {}; // console.log(nodesObj);\n\n      if (nodesObj && nodesObj.data && nodesObj.data.getNodesAsObj && nodesObj.data.getNodesAsObj.nodes && nodesObj.data.getNodesAsObj.nodes !== \"\") {\n        nodes = JSON.parse(nodesObj.data.getNodesAsObj.nodes);\n      }\n\n      var tempName = \"\";\n\n      if (retailer === \"hd\") {\n        tempName = \"hdNodes\";\n      }\n\n      if (retailer === \"am\") {\n        tempName = \"amNodes\";\n      }\n\n      if (retailer === \"fk\") {\n        tempName = \"fkNodes\";\n      }\n\n      this.setState({\n        [tempName]: nodes\n      }, function () {\n        console.log(this.state);\n      });\n    };\n\n    this.refreshTrees = async () => {\n      await this.setupNodesAsObj(\"hd\");\n      await this.setupNodesAsObj(\"fk\");\n      await this.setupNodesAsObj(\"am\");\n    };\n\n    this.handleToggleOnHover = () => {\n      var temp = this.state.toggleOnHover;\n      this.setState({\n        toggleOnHover: !temp\n      });\n    };\n\n    this.removeAddedNode = (retailer, node) => {\n      if (retailer === \"hd\") {\n        this.setState({\n          linkNodesNode: {\n            nodeId: \"\",\n            nodePath: \"\"\n          }\n        });\n      } else {\n        var nodes = this.state.linkNodesNodeList;\n        var newNodes = nodes.filter(function (value, index, arr) {\n          return value.retailer !== retailer || value.nodeId !== node.nodeId || value.nodePath !== node.nodePath;\n        });\n        this.setState({\n          linkNodesNodeList: newNodes\n        });\n      }\n    };\n  }\n\n  render() {\n    const hdRootNodes = this.getRootNodes(\"hd\");\n    const fkRootNodes = this.getRootNodes(\"fk\");\n    const amRootNodes = this.getRootNodes(\"am\");\n    return React.createElement(\"div\", {\n      className: \"custom-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-box-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"inner-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-row-left-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"custom-row-center-40\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"custom-btn\",\n      onClick: this.refreshTrees,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561\n      },\n      __self: this\n    }, \"Refresh\")), React.createElement(\"div\", {\n      className: \"custom-row-right-30\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-toggle-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"custom-toggle-label\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567\n      },\n      __self: this\n    }, \"Toggle On Hover\"), this.state.toggleOnHover ? React.createElement(FaToggleOn, {\n      className: \"custom-toggle\",\n      onClick: this.handleToggleOnHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569\n      },\n      __self: this\n    }) : React.createElement(FaToggleOff, {\n      className: \"custom-toggle\",\n      onClick: this.handleToggleOnHover,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 574\n      },\n      __self: this\n    })))), (this.state.linkNodesNode.nodeId !== \"\" || this.state.linkNodesNodeList.length > 0) && React.createElement(\"div\", {\n      className: \"custom-row\",\n      style: {\n        background: \"#eee\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-row-left-43\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586\n      },\n      __self: this\n    }, React.createElement(AddedNodeOuter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 587\n      },\n      __self: this\n    }, this.state.linkNodesNodeList.map(node => React.createElement(AddedNodeInner, {\n      retailer: node.retailer,\n      className: \"added-node-inner-div\",\n      key: node.nodeId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 594\n      },\n      __self: this\n    }, node.nodePath), React.createElement(FaTimes, {\n      onClick: () => this.removeAddedNode(node.retailer, node),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 595\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"custom-row-center-14 custom-align-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"custom-btn custom-btn2\",\n      onClick: this.linkNodes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605\n      },\n      __self: this\n    }, \"Link Categories\")), React.createElement(\"div\", {\n      className: \"custom-row-right-43 custom-align-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 612\n      },\n      __self: this\n    }, this.state.linkNodesNode.nodeId !== \"\" && React.createElement(AddedNodeOuter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 614\n      },\n      __self: this\n    }, React.createElement(AddedNodeInner, {\n      retailer: \"hd\",\n      className: \"added-node-inner-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 615\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619\n      },\n      __self: this\n    }, this.state.linkNodesNode.nodePath), React.createElement(FaTimes, {\n      onClick: () => this.removeAddedNode(\"hd\", this.state.linkNodesNode),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 620\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"mc-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 632\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      id: \"retailer-outer-div\",\n      className: \"mc-row-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-box-controller\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 634\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: this.state.showFlipkartNodes ? \"controller selected-controller\" : \"controller\",\n      onClick: this.switchRetailerView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 635\n      },\n      __self: this\n    }, \"Flipkart\"), React.createElement(\"div\", {\n      className: this.state.showAmazonNodes ? \"controller selected-controller\" : \"controller\",\n      onClick: this.switchRetailerView,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645\n      },\n      __self: this\n    }, \"Amazon\")), React.createElement(\"div\", {\n      id: \"flipkart-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656\n      },\n      __self: this\n    }, fkRootNodes.map(node => React.createElement(TreeNode, {\n      node: node,\n      getChildNodes: this.getChildNodes,\n      onToggle: this.onToggle,\n      retailer: \"fk\",\n      key: node.nodeId,\n      onHover: this.onHover,\n      onSelectNode: this.onSelectNode,\n      onAddNode: this.onAddNode,\n      removeLink: this.removeLink,\n      showRemoveButton: this.showRemoveButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      id: \"amazon-outer-div\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672\n      },\n      __self: this\n    }, amRootNodes.map(node => React.createElement(TreeNode, {\n      node: node,\n      getChildNodes: this.getChildNodes,\n      onToggle: this.onToggle,\n      retailer: \"am\",\n      key: node.nodeId,\n      onHover: this.onHover,\n      onSelectNode: this.onSelectNode,\n      onAddNode: this.onAddNode,\n      removeLink: this.removeLink,\n      showRemoveButton: this.showRemoveButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 674\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      id: \"huddlie-outer-div\",\n      className: \"mc-row-50\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 690\n      },\n      __self: this\n    }, \"Huddlie\"), hdRootNodes.map(node => React.createElement(TreeNode, {\n      node: node,\n      getChildNodes: this.getChildNodes,\n      onToggle: this.onToggle,\n      retailer: \"hd\",\n      key: node.nodeId,\n      onHover: this.onHover,\n      onSelectNode: this.onSelectNode,\n      onAddNode: this.onAddNode,\n      removeLink: this.removeLink,\n      showRemoveButton: this.showRemoveButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 692\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nexport default compose(graphql(GetNodesAsObj, {\n  name: \"GetNodesAsObj\"\n}), graphql(LinkNodes, {\n  name: \"LinkNodes\"\n}), graphql(RemoveLink, {\n  name: \"RemoveLink\"\n}))(ManageNodes);","map":{"version":3,"sources":["C:\\Apps\\Categories\\huddlie_nodes\\client\\src\\manageNodes.jsx"],"names":["React","Component","gql","compose","graphql","values","TreeNode","FaToggleOn","FaToggleOff","FaTimes","styled","GetNodesAsObj","LinkNodes","RemoveLink","getBackgroundColor","retailer","color","getColor","AddedNodeOuter","div","AddedNodeInner","props","ManageNodes","state","showFlipkartNodes","showAmazonNodes","toggleOnHover","fkNodes","amNodes","hdNodes","fkSelected","amSelected","hdSelected","linkNodesNode","nodeId","nodePath","linkNodesNodeList","getRootNodes","nodes","filter","node","pathLength","getChildNodes","result","node2","pathNameString","tempPath","onHover","isOpen","onToggle","tempName","setState","onSelectNode","tempNodesName","tempSelectedName","currentlySelected","isSelected","onAddNode","tempNodePath","nodeName","list","toBeAdded","x","length","tempNode","push","showRemoveButton","elId","console","log","el","document","getElementById","style","display","getElementsByClassName","i","switchRetailerView","removeLink","linkedNode","variables","nodeToDelete","data","tempKey","amazonNodes","linkedNodes","flipkartNodes","huddlieNodes","linkNodes","nodeList","y","setupNodesAsObj","nodesObj","getNodesAsObj","JSON","parse","refreshTrees","handleToggleOnHover","temp","removeAddedNode","newNodes","value","index","arr","render","hdRootNodes","fkRootNodes","amRootNodes","background","map","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { compose, graphql } from \"react-apollo\";\r\nimport values from \"lodash/values\";\r\nimport TreeNode from \"./treeNode\";\r\nimport { FaToggleOn, FaToggleOff, FaTimes } from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\n\r\nconst GetNodesAsObj = gql`\r\n  mutation getNodesAsObj($retailer: String!) {\r\n    getNodesAsObj(retailer: $retailer) {\r\n      nodes\r\n    }\r\n  }\r\n`;\r\nconst LinkNodes = gql`\r\n  mutation linkNodes($nodeId: String!, $nodeList: [linkedNodeInput]!) {\r\n    linkNodes(nodeId: $nodeId, nodeList: $nodeList) {\r\n      flipkartNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n      amazonNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n      huddlieNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst RemoveLink = gql`\r\n  mutation removeLink($nodeId: String!, $nodeToDelete: linkedNodeInput!) {\r\n    removeLink(nodeId: $nodeId, nodeToDelete: $nodeToDelete) {\r\n      flipkartNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n      amazonNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n      huddlieNodes {\r\n        nodeId\r\n        nodeName\r\n        pathString\r\n        pathNameString\r\n        pathLength\r\n        linkedNodes {\r\n          retailer\r\n          nodeId\r\n          nodePath\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst getBackgroundColor = retailer => {\r\n  var color = \"#e0ffff\"; //light cyan\r\n  if (retailer === \"header\") {\r\n    color = \"#eee\";\r\n  } else if (retailer === \"hd\") {\r\n    color = \"#e0ffff\";\r\n  } else if (retailer === \"fk\") {\r\n    color = \"#F8E831\";\r\n  } else if (retailer === \"am\") {\r\n    color = \"#146EB4\";\r\n  }\r\n  return color;\r\n};\r\n\r\nconst getColor = retailer => {\r\n  var color = \"#000\"; //light cyan\r\n  if (retailer === \"fk\") {\r\n    color = \"#047BD5\";\r\n  } else if (retailer === \"am\") {\r\n    color = \"#FF9900\";\r\n  }\r\n  return color;\r\n};\r\n\r\nconst AddedNodeOuter = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding 5px 75px;\r\n`;\r\n\r\nconst AddedNodeInner = styled.div`\r\n  background: ${props => getBackgroundColor(props.retailer)};\r\n  color: ${props => getColor(props.retailer)};\r\n  font-family: Ozxgen, sans-serif;\r\n  margin: 0px 0px 5px 0px !important;\r\n  box-shadow: ${props =>\r\n    props.retailer === \"header\"\r\n      ? \"0px\"\r\n      : \"0px 0px 5px 0px rgba(15, 15, 15, 0.2)\"};\r\n  border-radius: ${props => (props.retailer === \"header\" ? \"0px\" : \"10px\")};\r\n  vertical-align: middle;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nclass ManageNodes extends Component {\r\n  state = {\r\n    showFlipkartNodes: true,\r\n    showAmazonNodes: false,\r\n    toggleOnHover: false,\r\n    fkNodes: {},\r\n    amNodes: {},\r\n    hdNodes: {},\r\n    fkSelected: \"\",\r\n    amSelected: \"\",\r\n    hdSelected: \"\",\r\n    linkNodesNode: { nodeId: \"\", nodePath: \"\" },\r\n    linkNodesNodeList: []\r\n  };\r\n\r\n  getRootNodes = retailer => {\r\n    var nodes = {};\r\n    switch (retailer) {\r\n      case \"hd\":\r\n        nodes = this.state.hdNodes;\r\n        break;\r\n      case \"fk\":\r\n        nodes = this.state.fkNodes;\r\n        break;\r\n      case \"am\":\r\n        nodes = this.state.amNodes;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return values(nodes).filter(node => node.pathLength === 0);\r\n  };\r\n\r\n  getChildNodes = (retailer, node) => {\r\n    var nodes = {};\r\n    switch (retailer) {\r\n      case \"hd\":\r\n        nodes = this.state.hdNodes;\r\n        break;\r\n      case \"fk\":\r\n        nodes = this.state.fkNodes;\r\n        break;\r\n      case \"am\":\r\n        nodes = this.state.amNodes;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    var result = values(nodes).filter(\r\n      node2 => node2.pathNameString === node.tempPath\r\n    );\r\n    // console.log(result);\r\n    return result;\r\n  };\r\n\r\n  onHover = (retailer, node) => {\r\n    if (this.state.toggleOnHover && !node.isOpen) {\r\n      this.onToggle(retailer, node);\r\n    }\r\n  };\r\n\r\n  onToggle = (retailer, node) => {\r\n    const tempName = retailer + \"Nodes\";\r\n    var nodes = {};\r\n    switch (retailer) {\r\n      case \"hd\":\r\n        nodes = this.state.hdNodes;\r\n        break;\r\n      case \"fk\":\r\n        nodes = this.state.fkNodes;\r\n        break;\r\n      case \"am\":\r\n        nodes = this.state.amNodes;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    nodes[node.tempPath].isOpen = !node.isOpen;\r\n    this.setState({ [tempName]: nodes });\r\n  };\r\n\r\n  onSelectNode = (retailer, node) => {\r\n    const tempNodesName = retailer + \"Nodes\";\r\n    const tempSelectedName = retailer + \"Selected\";\r\n\r\n    var nodes = {};\r\n    var currentlySelected = \"\";\r\n    switch (retailer) {\r\n      case \"hd\":\r\n        nodes = this.state.hdNodes;\r\n        currentlySelected = this.state.hdSelected;\r\n        break;\r\n      case \"fk\":\r\n        nodes = this.state.fkNodes;\r\n        currentlySelected = this.state.fkSelected;\r\n        break;\r\n      case \"am\":\r\n        nodes = this.state.amNodes;\r\n        currentlySelected = this.state.amSelected;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (currentlySelected !== \"\" && currentlySelected !== node.tempPath) {\r\n      nodes[currentlySelected].isSelected = node.isSelected;\r\n    }\r\n\r\n    nodes[node.tempPath].isSelected = !node.isSelected;\r\n    this.setState({\r\n      [tempNodesName]: nodes,\r\n      [tempSelectedName]: node.tempPath\r\n    });\r\n  };\r\n\r\n  onAddNode = (retailer, node) => {\r\n    var tempNodePath = \"\";\r\n\r\n    if (retailer === \"hd\") {\r\n      if (node.pathLength > 0) {\r\n        tempNodePath = node.pathNameString + \">\" + node.nodeName;\r\n      } else {\r\n        tempNodePath = node.nodeName;\r\n      }\r\n\r\n      if (this.state.linkNodesNode.nodeId === \"\") {\r\n        this.setState({\r\n          linkNodesNode: { nodeId: node.nodeId, nodePath: tempNodePath }\r\n        });\r\n      } else if (this.state.linkNodesNode.nodeId !== node.nodeId) {\r\n        this.setState({\r\n          linkNodesNode: { nodeId: node.nodeId, nodePath: tempNodePath },\r\n          linkNodesNodeList: []\r\n        });\r\n      }\r\n    } else {\r\n      var list = this.state.linkNodesNodeList;\r\n      tempNodePath = \"\";\r\n\r\n      if (node.pathLength > 0) {\r\n        tempNodePath = node.pathNameString + \">\" + node.nodeName;\r\n      } else {\r\n        tempNodePath = node.nodeName;\r\n      }\r\n\r\n      var toBeAdded = true;\r\n      for (var x = 0; x < list.length; x++) {\r\n        var tempNode = list[x];\r\n        if (\r\n          tempNode.retailer === retailer &&\r\n          tempNode.nodeId === node.nodeId &&\r\n          tempNode.nodePath === tempNodePath\r\n        ) {\r\n          toBeAdded = false;\r\n        }\r\n      }\r\n\r\n      if (toBeAdded) {\r\n        list.push({\r\n          retailer: retailer,\r\n          nodeId: node.nodeId,\r\n          nodePath: tempNodePath\r\n        });\r\n      }\r\n\r\n      this.setState({\r\n        linkNodesNodeList: list\r\n      });\r\n    }\r\n  };\r\n\r\n  showRemoveButton = elId => {\r\n    console.log(elId);\r\n    var el = document.getElementById(elId);\r\n    if (el.style.display === \"\" || el.style.display === \"none\") {\r\n      var x = document.getElementsByClassName(\"linkedNodeRemoveBtn\");\r\n      var i;\r\n      for (i = 0; i < x.length; i++) {\r\n        x[i].style.display = \"none\";\r\n      }\r\n      el.style.display = \"block\";\r\n    } else {\r\n      el.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  switchRetailerView = () => {\r\n    this.setState(\r\n      {\r\n        showFlipkartNodes: !this.state.showFlipkartNodes,\r\n        showAmazonNodes: !this.state.showAmazonNodes\r\n      },\r\n      function() {\r\n        if (this.state.showFlipkartNodes) {\r\n          document.getElementById(\"flipkart-outer-div\").style.display = \"block\";\r\n        } else {\r\n          document.getElementById(\"flipkart-outer-div\").style.display = \"none\";\r\n        }\r\n        if (this.state.showAmazonNodes) {\r\n          document.getElementById(\"amazon-outer-div\").style.display = \"block\";\r\n        } else {\r\n          document.getElementById(\"amazon-outer-div\").style.display = \"none\";\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  removeLink = async (node, linkedNode) => {\r\n    console.log(node);\r\n    console.log(linkedNode);\r\n    var result = await this.props.RemoveLink({\r\n      variables: {\r\n        nodeId: node.nodeId,\r\n        nodeToDelete: linkedNode\r\n      }\r\n    });\r\n    console.log(result);\r\n\r\n    if (result && result.data && result.data.removeLink) {\r\n      var tempKey = \"\";\r\n      var node = {};\r\n      var nodes = {};\r\n      if (\r\n        result.data.removeLink.amazonNodes &&\r\n        result.data.removeLink.amazonNodes.length > 0\r\n      ) {\r\n        node = result.data.removeLink.amazonNodes[0];\r\n        if (node.pathLength > 0) {\r\n          tempKey = node.pathNameString + \">\" + node.nodeName;\r\n        } else {\r\n          tempKey = node.nodeName;\r\n        }\r\n        nodes = this.state.amNodes;\r\n        nodes[tempKey].linkedNodes = node.linkedNodes;\r\n        await this.setState({ amNodes: nodes });\r\n      }\r\n      if (\r\n        result.data.removeLink.flipkartNodes &&\r\n        result.data.removeLink.flipkartNodes.length > 0\r\n      ) {\r\n        node = result.data.removeLink.flipkartNodes[0];\r\n        if (node.pathLength > 0) {\r\n          tempKey = node.pathNameString + \">\" + node.nodeName;\r\n        } else {\r\n          tempKey = node.nodeName;\r\n        }\r\n        nodes = this.state.fkNodes;\r\n        nodes[tempKey].linkedNodes = node.linkedNodes;\r\n        await this.setState({ fkNodes: nodes });\r\n      }\r\n      if (\r\n        result.data.removeLink.huddlieNodes &&\r\n        result.data.removeLink.huddlieNodes.length > 0\r\n      ) {\r\n        node = result.data.removeLink.huddlieNodes[0];\r\n        if (node.pathLength > 0) {\r\n          tempKey = node.pathNameString + \">\" + node.nodeName;\r\n        } else {\r\n          tempKey = node.nodeName;\r\n        }\r\n        nodes = this.state.hdNodes;\r\n        nodes[tempKey].linkedNodes = node.linkedNodes;\r\n        await this.setState({ hdNodes: nodes });\r\n      }\r\n    }\r\n  };\r\n\r\n  linkNodes = async () => {\r\n    var nodeId = this.state.linkNodesNode.nodeId;\r\n    var nodeList = this.state.linkNodesNodeList;\r\n\r\n    var result = await this.props.LinkNodes({\r\n      variables: {\r\n        nodeId: nodeId,\r\n        nodeList: nodeList\r\n      }\r\n    });\r\n\r\n    console.log(result);\r\n    var fkNodes = [];\r\n    var amNodes = [];\r\n    if (result && result.data && result.data.linkNodes) {\r\n      var tempKey = \"\";\r\n      var node = {};\r\n      var nodes = {};\r\n      if (result.data.linkNodes.amazonNodes) {\r\n        amNodes = result.data.linkNodes.amazonNodes;\r\n        nodes = this.state.amNodes;\r\n        for (var x = 0; x < amNodes.length; x++) {\r\n          node = amNodes[x];\r\n          if (node.pathLength > 0) {\r\n            tempKey = node.pathNameString + \">\" + node.nodeName;\r\n          } else {\r\n            tempKey = node.nodeName;\r\n          }\r\n\r\n          nodes[tempKey].linkedNodes = node.linkedNodes;\r\n          await this.setState({ amNodes: nodes });\r\n        }\r\n      }\r\n\r\n      if (result.data.linkNodes.flipkartNodes) {\r\n        fkNodes = result.data.linkNodes.flipkartNodes;\r\n        nodes = this.state.fkNodes;\r\n        for (var y = 0; y < fkNodes.length; y++) {\r\n          node = fkNodes[y];\r\n          if (node.pathLength > 0) {\r\n            tempKey = node.pathNameString + \">\" + node.nodeName;\r\n          } else {\r\n            tempKey = node.nodeName;\r\n          }\r\n\r\n          nodes[tempKey].linkedNodes = node.linkedNodes;\r\n          await this.setState({ fkNodes: nodes });\r\n        }\r\n      }\r\n\r\n      if (result.data.linkNodes.huddlieNodes) {\r\n        node = result.data.linkNodes.huddlieNodes[0];\r\n        if (node.pathLength > 0) {\r\n          tempKey = node.pathNameString + \">\" + node.nodeName;\r\n        } else {\r\n          tempKey = node.nodeName;\r\n        }\r\n\r\n        nodes = this.state.hdNodes;\r\n\r\n        nodes[tempKey].linkedNodes = node.linkedNodes;\r\n        await this.setState({ hdNodes: nodes });\r\n\r\n        this.setState({\r\n          linkNodesNode: { nodeId: \"\", nodePath: \"\" },\r\n          linkNodesNodeList: []\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  setupNodesAsObj = async retailer => {\r\n    var nodesObj = await this.props.GetNodesAsObj({\r\n      variables: {\r\n        retailer: retailer\r\n      }\r\n    });\r\n    var nodes = {};\r\n    // console.log(nodesObj);\r\n    if (\r\n      nodesObj &&\r\n      nodesObj.data &&\r\n      nodesObj.data.getNodesAsObj &&\r\n      nodesObj.data.getNodesAsObj.nodes &&\r\n      nodesObj.data.getNodesAsObj.nodes !== \"\"\r\n    ) {\r\n      nodes = JSON.parse(nodesObj.data.getNodesAsObj.nodes);\r\n    }\r\n    var tempName = \"\";\r\n    if (retailer === \"hd\") {\r\n      tempName = \"hdNodes\";\r\n    }\r\n    if (retailer === \"am\") {\r\n      tempName = \"amNodes\";\r\n    }\r\n    if (retailer === \"fk\") {\r\n      tempName = \"fkNodes\";\r\n    }\r\n\r\n    this.setState({ [tempName]: nodes }, function() {\r\n      console.log(this.state);\r\n    });\r\n  };\r\n\r\n  refreshTrees = async () => {\r\n    await this.setupNodesAsObj(\"hd\");\r\n    await this.setupNodesAsObj(\"fk\");\r\n    await this.setupNodesAsObj(\"am\");\r\n  };\r\n\r\n  handleToggleOnHover = () => {\r\n    var temp = this.state.toggleOnHover;\r\n    this.setState({\r\n      toggleOnHover: !temp\r\n    });\r\n  };\r\n\r\n  removeAddedNode = (retailer, node) => {\r\n    if (retailer === \"hd\") {\r\n      this.setState({ linkNodesNode: { nodeId: \"\", nodePath: \"\" } });\r\n    } else {\r\n      var nodes = this.state.linkNodesNodeList;\r\n      var newNodes = nodes.filter(function(value, index, arr) {\r\n        return (\r\n          value.retailer !== retailer ||\r\n          value.nodeId !== node.nodeId ||\r\n          value.nodePath !== node.nodePath\r\n        );\r\n      });\r\n\r\n      this.setState({ linkNodesNodeList: newNodes });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const hdRootNodes = this.getRootNodes(\"hd\");\r\n    const fkRootNodes = this.getRootNodes(\"fk\");\r\n    const amRootNodes = this.getRootNodes(\"am\");\r\n\r\n    return (\r\n      <div className=\"custom-outer-div\">\r\n        <div className=\"custom-box-container\">\r\n          <div className=\"inner-container\">\r\n            <div className=\"custom-row\">\r\n              <div className=\"custom-row-left-30\" />\r\n              <div className=\"custom-row-center-40\">\r\n                <button className=\"custom-btn\" onClick={this.refreshTrees}>\r\n                  Refresh\r\n                </button>\r\n              </div>\r\n              <div className=\"custom-row-right-30\">\r\n                <div className=\"custom-toggle-div\">\r\n                  <label className=\"custom-toggle-label\">Toggle On Hover</label>\r\n                  {this.state.toggleOnHover ? (\r\n                    <FaToggleOn\r\n                      className=\"custom-toggle\"\r\n                      onClick={this.handleToggleOnHover}\r\n                    />\r\n                  ) : (\r\n                    <FaToggleOff\r\n                      className=\"custom-toggle\"\r\n                      onClick={this.handleToggleOnHover}\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {(this.state.linkNodesNode.nodeId !== \"\" ||\r\n              this.state.linkNodesNodeList.length > 0) && (\r\n              <div className=\"custom-row\" style={{ background: \"#eee\" }}>\r\n                <div className=\"custom-row-left-43\">\r\n                  <AddedNodeOuter>\r\n                    {this.state.linkNodesNodeList.map(node => (\r\n                      <AddedNodeInner\r\n                        retailer={node.retailer}\r\n                        className=\"added-node-inner-div\"\r\n                        key={node.nodeId}\r\n                      >\r\n                        <label>{node.nodePath}</label>\r\n                        <FaTimes\r\n                          onClick={() =>\r\n                            this.removeAddedNode(node.retailer, node)\r\n                          }\r\n                        />\r\n                      </AddedNodeInner>\r\n                    ))}\r\n                  </AddedNodeOuter>\r\n                </div>\r\n                <div className=\"custom-row-center-14 custom-align-center\">\r\n                  <button\r\n                    className=\"custom-btn custom-btn2\"\r\n                    onClick={this.linkNodes}\r\n                  >\r\n                    Link Categories\r\n                  </button>\r\n                </div>\r\n                <div className=\"custom-row-right-43 custom-align-center\">\r\n                  {this.state.linkNodesNode.nodeId !== \"\" && (\r\n                    <AddedNodeOuter>\r\n                      <AddedNodeInner\r\n                        retailer={\"hd\"}\r\n                        className=\"added-node-inner-div\"\r\n                      >\r\n                        <label>{this.state.linkNodesNode.nodePath}</label>\r\n                        <FaTimes\r\n                          onClick={() =>\r\n                            this.removeAddedNode(\"hd\", this.state.linkNodesNode)\r\n                          }\r\n                        />\r\n                      </AddedNodeInner>\r\n                    </AddedNodeOuter>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div className=\"mc-row\">\r\n              <div id=\"retailer-outer-div\" className=\"mc-row-50\">\r\n                <div className=\"custom-box-controller\">\r\n                  <div\r\n                    className={\r\n                      this.state.showFlipkartNodes\r\n                        ? \"controller selected-controller\"\r\n                        : \"controller\"\r\n                    }\r\n                    onClick={this.switchRetailerView}\r\n                  >\r\n                    Flipkart\r\n                  </div>\r\n                  <div\r\n                    className={\r\n                      this.state.showAmazonNodes\r\n                        ? \"controller selected-controller\"\r\n                        : \"controller\"\r\n                    }\r\n                    onClick={this.switchRetailerView}\r\n                  >\r\n                    Amazon\r\n                  </div>\r\n                </div>\r\n                <div id=\"flipkart-outer-div\">\r\n                  {fkRootNodes.map(node => (\r\n                    <TreeNode\r\n                      node={node}\r\n                      getChildNodes={this.getChildNodes}\r\n                      onToggle={this.onToggle}\r\n                      retailer=\"fk\"\r\n                      key={node.nodeId}\r\n                      onHover={this.onHover}\r\n                      onSelectNode={this.onSelectNode}\r\n                      onAddNode={this.onAddNode}\r\n                      removeLink={this.removeLink}\r\n                      showRemoveButton={this.showRemoveButton}\r\n                    />\r\n                  ))}\r\n                </div>\r\n                <div id=\"amazon-outer-div\">\r\n                  {amRootNodes.map(node => (\r\n                    <TreeNode\r\n                      node={node}\r\n                      getChildNodes={this.getChildNodes}\r\n                      onToggle={this.onToggle}\r\n                      retailer=\"am\"\r\n                      key={node.nodeId}\r\n                      onHover={this.onHover}\r\n                      onSelectNode={this.onSelectNode}\r\n                      onAddNode={this.onAddNode}\r\n                      removeLink={this.removeLink}\r\n                      showRemoveButton={this.showRemoveButton}\r\n                    />\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div id=\"huddlie-outer-div\" className=\"mc-row-50\">\r\n                <div className=\"header\">Huddlie</div>\r\n                {hdRootNodes.map(node => (\r\n                  <TreeNode\r\n                    node={node}\r\n                    getChildNodes={this.getChildNodes}\r\n                    onToggle={this.onToggle}\r\n                    retailer=\"hd\"\r\n                    key={node.nodeId}\r\n                    onHover={this.onHover}\r\n                    onSelectNode={this.onSelectNode}\r\n                    onAddNode={this.onAddNode}\r\n                    removeLink={this.removeLink}\r\n                    showRemoveButton={this.showRemoveButton}\r\n                  />\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  graphql(GetNodesAsObj, { name: \"GetNodesAsObj\" }),\r\n  graphql(LinkNodes, { name: \"LinkNodes\" }),\r\n  graphql(RemoveLink, { name: \"RemoveLink\" })\r\n)(ManageNodes);\r\n"]},"metadata":{},"sourceType":"module"}