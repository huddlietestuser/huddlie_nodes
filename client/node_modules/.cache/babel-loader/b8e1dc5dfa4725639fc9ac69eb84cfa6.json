{"ast":null,"code":"import _taggedTemplateLiteral from \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"C:\\\\Apps\\\\Categories\\\\huddlie_nodes\\\\client\\\\src\\\\treeNode.jsx\";\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  margin-right: \", \"px;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-direction: row;\\n  align-items: center;\\n  padding: 5px 8px;\\n  padding-left: \", \"px;\\n  &:hover {\\n    background: lightgray;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport { FaFile, FaFolder, FaFolderOpen, FaChevronDown, FaChevronRight } from \"react-icons/fa\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\n\nconst getPaddingLeft = level => {\n  let paddingLeft = level * 20;\n  return paddingLeft;\n};\n\nconst StyledTreeNode = styled.div(_templateObject(), props => getPaddingLeft(props.level));\nconst NodeIcon = styled.div(_templateObject2(), props => props.marginRight ? props.marginRight : 5);\n\nconst TreeNode = props => {\n  const node = props.node,\n        getChildNodes = props.getChildNodes,\n        level = props.level,\n        onToggle = props.onToggle,\n        retailer = props.retailer;\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(StyledTreeNode, {\n    level: level,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(NodeIcon, {\n    onClick: () => onToggle(retailer, node),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, node.isOpen ? React.createElement(FaChevronDown, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }) : React.createElement(FaChevronRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(NodeIcon, {\n    marginRight: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(FaFile, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    role: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, node.nodeName)), node.isOpen && getChildNodes(retailer, node).map(childNode => React.createElement(TreeNode, Object.assign({}, props, {\n    node: childNode,\n    level: level + 1,\n    key: childNode.nodeId,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }))));\n};\n\nTreeNode.propTypes = {\n  node: PropTypes.object.isRequired,\n  getChildNodes: PropTypes.func.isRequired,\n  level: PropTypes.number.isRequired,\n  onToggle: PropTypes.func.isRequired\n};\nTreeNode.defaultProps = {\n  level: 0\n};\nexport default TreeNode;","map":{"version":3,"sources":["C:\\Apps\\Categories\\huddlie_nodes\\client\\src\\treeNode.jsx"],"names":["React","FaFile","FaFolder","FaFolderOpen","FaChevronDown","FaChevronRight","styled","PropTypes","getPaddingLeft","level","paddingLeft","StyledTreeNode","div","props","NodeIcon","marginRight","TreeNode","node","getChildNodes","onToggle","retailer","isOpen","nodeName","map","childNode","nodeId","propTypes","object","isRequired","func","number","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,QAFF,EAGEC,YAHF,EAIEC,aAJF,EAKEC,cALF,QAMO,gBANP;AAOA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,cAAc,GAAGC,KAAK,IAAI;AAC9B,MAAIC,WAAW,GAAGD,KAAK,GAAG,EAA1B;AACA,SAAOC,WAAP;AACD,CAHD;;AAKA,MAAMC,cAAc,GAAGL,MAAM,CAACM,GAAV,oBAKFC,KAAK,IAAIL,cAAc,CAACK,KAAK,CAACJ,KAAP,CALrB,CAApB;AAWA,MAAMK,QAAQ,GAAGR,MAAM,CAACM,GAAV,qBAEIC,KAAK,IAAKA,KAAK,CAACE,WAAN,GAAoBF,KAAK,CAACE,WAA1B,GAAwC,CAFtD,CAAd;;AAKA,MAAMC,QAAQ,GAAGH,KAAK,IAAI;AAAA,QAChBI,IADgB,GACmCJ,KADnC,CAChBI,IADgB;AAAA,QACVC,aADU,GACmCL,KADnC,CACVK,aADU;AAAA,QACKT,KADL,GACmCI,KADnC,CACKJ,KADL;AAAA,QACYU,QADZ,GACmCN,KADnC,CACYM,QADZ;AAAA,QACsBC,QADtB,GACmCP,KADnC,CACsBO,QADtB;AAGxB,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,KAAK,EAAEX,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAE,MAAMU,QAAQ,CAACC,QAAD,EAAWH,IAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,IAAI,CAACI,MAAL,GAAc,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAd,GAAkC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADrC,CADF,EAKE,oBAAC,QAAD;AAAU,IAAA,WAAW,EAAE,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CALF,EAaE;AAAM,IAAA,IAAI,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqBJ,IAAI,CAACK,QAA1B,CAbF,CADF,EAiBGL,IAAI,CAACI,MAAL,IACCH,aAAa,CAACE,QAAD,EAAWH,IAAX,CAAb,CAA8BM,GAA9B,CAAkCC,SAAS,IACzC,oBAAC,QAAD,oBACMX,KADN;AAEE,IAAA,IAAI,EAAEW,SAFR;AAGE,IAAA,KAAK,EAAEf,KAAK,GAAG,CAHjB;AAIE,IAAA,GAAG,EAAEe,SAAS,CAACC,MAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,CAlBJ,CADF;AA6BD,CAhCD;;AAkCAT,QAAQ,CAACU,SAAT,GAAqB;AACnBT,EAAAA,IAAI,EAAEV,SAAS,CAACoB,MAAV,CAAiBC,UADJ;AAEnBV,EAAAA,aAAa,EAAEX,SAAS,CAACsB,IAAV,CAAeD,UAFX;AAGnBnB,EAAAA,KAAK,EAAEF,SAAS,CAACuB,MAAV,CAAiBF,UAHL;AAInBT,EAAAA,QAAQ,EAAEZ,SAAS,CAACsB,IAAV,CAAeD;AAJN,CAArB;AAOAZ,QAAQ,CAACe,YAAT,GAAwB;AACtBtB,EAAAA,KAAK,EAAE;AADe,CAAxB;AAIA,eAAeO,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  FaFile,\r\n  FaFolder,\r\n  FaFolderOpen,\r\n  FaChevronDown,\r\n  FaChevronRight\r\n} from \"react-icons/fa\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst getPaddingLeft = level => {\r\n  let paddingLeft = level * 20;\r\n  return paddingLeft;\r\n};\r\n\r\nconst StyledTreeNode = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  padding: 5px 8px;\r\n  padding-left: ${props => getPaddingLeft(props.level)}px;\r\n  &:hover {\r\n    background: lightgray;\r\n  }\r\n`;\r\n\r\nconst NodeIcon = styled.div`\r\n  font-size: 12px;\r\n  margin-right: ${props => (props.marginRight ? props.marginRight : 5)}px;\r\n`;\r\n\r\nconst TreeNode = props => {\r\n  const { node, getChildNodes, level, onToggle, retailer } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledTreeNode level={level}>\r\n        <NodeIcon onClick={() => onToggle(retailer, node)}>\r\n          {node.isOpen ? <FaChevronDown /> : <FaChevronRight />}\r\n        </NodeIcon>\r\n\r\n        <NodeIcon marginRight={10}>\r\n          {/* {node.type === \"file\" && <FaFile />}\r\n          {node.type === \"folder\" && node.isOpen === true && <FaFolderOpen />}\r\n          {node.type === \"folder\" && !node.isOpen && <FaFolder />} */}\r\n          <FaFile />\r\n        </NodeIcon>\r\n\r\n        {/* <span role=\"button\" onClick={() => onNodeSelect(node)}> */}\r\n        <span role=\"button\">{node.nodeName}</span>\r\n      </StyledTreeNode>\r\n\r\n      {node.isOpen &&\r\n        getChildNodes(retailer, node).map(childNode => (\r\n          <TreeNode\r\n            {...props}\r\n            node={childNode}\r\n            level={level + 1}\r\n            key={childNode.nodeId}\r\n          />\r\n        ))}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nTreeNode.propTypes = {\r\n  node: PropTypes.object.isRequired,\r\n  getChildNodes: PropTypes.func.isRequired,\r\n  level: PropTypes.number.isRequired,\r\n  onToggle: PropTypes.func.isRequired\r\n};\r\n\r\nTreeNode.defaultProps = {\r\n  level: 0\r\n};\r\n\r\nexport default TreeNode;\r\n"]},"metadata":{},"sourceType":"module"}